version: "3"
services:

  golang:
    image: erema/golang:latest
    depends_on:
      - mysql
      - neo4j
    tty: true
    volumes:
    - ./:/var/go_sendbox
    working_dir: /var/go_sendbox

  mysql:
    image: mysql:8.0.19
    environment:
      MYSQL_DATABASE: go
      MYSQL_ROOT_PASSWORD: 123
    ports:
      - 3306:3306

  neo4j:
    image: neo4j:latest
    environment:
      NEO4J_AUTH: neo4j/123
    ports:
      - 7474:7474
      - 7687:7687

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: go
      POSTGRES_USER: go
      POSTGRES_PASSWORD: 123
    ports:
      - 5432:5432

  aws-cli:
    image: amazon/aws-cli:latest
    entrypoint: tail -f /dev/null
    tty: true

  terraform:
    image: hashicorp/terraform:latest
    entrypoint: tail -f /dev/null
    volumes:
    - ./learning/other/aws_api_gateway_lambda_terraform:/aws_api_gateway_lambda_terraform
    working_dir: /aws_api_gateway_lambda_terraform
    tty: true

  mongodb:
    restart: always
    image: mongo:4.4.5-bionic
    ports:
      - 27017:27017
    volumes:
      - ./data/mongo:/data/db

  etcd:
    image: quay.io/coreos/etcd:v3.5.1
    command:
      - "/usr/local/bin/etcd"
      - "--advertise-client-urls=http://etcd:2379"
      - "--listen-client-urls=http://0.0.0.0:2379"

  kube-api-server:
    image: k8s.gcr.io/kube-apiserver:v1.23.4
    depends_on:
      - etcd
    volumes:
      - ./certs:/var/run/kubernetes
    command:
      - "kube-apiserver"
      - "--etcd-servers=etcd:2379"
      - "--service-account-signing-key-file=/var/run/kubernetes/cluster.key"
      - "--service-account-key-file=/var/run/kubernetes/cluster.crt"
      - "--service-account-issuer=https://kube.local"
